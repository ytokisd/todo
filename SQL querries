Given tables:
★ tasks (id, name, status, project_id)
★ projects (id, name)

Write the queries for:

1. get all statuses, not repeating, alphabetically ordered

SELECT DISTINCT status FROM tasks
ORER BY status ASC;

2. get the count of all tasks in each project, order by tasks count descending

SELECT p.name, COUNT(t.name) cnt
FROM projects p
LEFT JOIN tasks t ON t.project_id = p.id
GROUP BY p.name
ORDER BY cnt DESC;

3. get the count of all tasks in each project, order by projects names

SELECT p.name, COUNT(t.name) cnt
FROM projects p
LEFT JOIN tasks t ON t.project_id = p.id
GROUP BY p.name
ORDER BY p.name ASC;

4. get the tasks for all projects having the name beginning with “N” letter

SELECT p.name project_name, t.name task_name, t.status task_status
FROM projects p
INNER JOIN tasks t ON t.project_id = p.id
WHERE SUBSTR(p.name, 1, 1) = 'N';

5. get the list of all projects containing the ‘a’ letter in the middle of the name, and
show the tasks count near each project. Mention that there can exist projects without
tasks and tasks with project_id=NULL

SELECT p.name, COUNT(t.name) cnt
FROM projects p
LEFT JOIN tasks t ON t.project_id = p.id
WHERE p.name REGEXP '^[^a]+a[^a]+$'
GROUP BY p.name;

6. get the list of tasks with duplicate names. Order alphabetically

SELECT t.name, COUNT(*) cnt
FROM tasks t
GROUP BY t.name
HAVING cnt > 1
ORDER BY t.name ASC;

7. get the list of tasks having several exact matches of both name and status, from
the project ‘Garage’. Order by matches count

SELECT t.name, t.status, count(t.name) cnt
FROM projects p
INNER JOIN tasks t ON t.project_id = p.id
WHERE p.name = 'Garage'
GROUP BY t.name, t.status
HAVING cnt > 1
ORDER BY cnt ASC;

8. get the list of project names having more than 10 tasks in status ‘completed’. Order
by project_id

SELECT p.name, count(*) cnt
FROM projects p
INNER JOIN tasks t ON t.project_id = p.id AND t.status = "completed"
GROUP BY p.name
HAVING cnt > 10
ORDER BY p.id ASC;
